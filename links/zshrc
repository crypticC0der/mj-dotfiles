# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/mj/.config/oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="crcandy"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
setopt correct autocd extendedglob notify
zstyle ':completion:*' completer _complete _ignored _correct _approximate
zstyle ':completion:*' format '%d'
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' menu select=5
zstyle ':completion:*' original true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle :compinstall filename '/home/mj/.zshrc'

autoload -Uz compinit
compinit

[[ $- != *i* ]] && return
__fzf_history ()
{
__ehc $(history | fzf -e --tac --tiebreak=index | perl -ne 'm/^\s*([0-9]+)/ and print "!$1"')
}

__ehc()
{
if
        [[ -n $1 ]]
then
        bind '"\er": redraw-current-line'
        bind '"\e^": magic-space'
        READLINE_LINE=${READLINE_LINE:+${READLINE_LINE:0:READLINE_POINT}}${1}${READLINE_LINE:+${READLINE_LINE:READLINE_POINT}}
        READLINE_POINT=$(( READLINE_POINT + ${#1} ))
else
        bind '"\er":'
        bind '"\e^":'
fi
}

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    \nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

#exports
export MANPAGER="nvim -c 'set ft=man' -"
export EDITOR=nvim


newbasicdiscord(){
	cp -r ~/Documents/Programming/python/basicdiscord ~/Documents/Programming/python/$1;
	mv ~/Documents/Programming/python/$1/main.py ~/Documents/Programming/python/$1/$1.py;
	echo "cd ~/Documents/Programming/python/$1" >> ~/shs/$1.sh;
	echo "python3 $1.py &>/dev/null &" >> ~/shs/$1.sh;
	chmod +x ~/shs/$1.sh;
	echo "new discord bot set up at ~/Documents/Programming/python/$1";
}

mkcdir(){
	mkdir $1;
	\cd $1;
}

runcmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, <>' ; }
writecmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, do{ chomp($_ = <>); $_ }' ; }

lwd(){
	sh -c "~/shs/lwd.sh"
}

histsearch(){
	case "$1" in
		-e)
			history | cut -c 8- | fzf +s -e --tac --height 10 -q "$1"|runcmd;
			return 0;;
		*)
			echo $(history | cut -c 8- | fzf -e +s --tac --height 10 -q "$1") | writecmd;
			return 0;;
	esac
}

bcd(){
	\cd $(python3 -c "print('$(lwd | fzf -e +s +m --tac -1 -0 --height 5 -q "$1")'.split(' -  ',1)[1])")
}

fzcd(){
	inp=$1
	o=$(python3 ~/Documents/Programming/python/scripts/dirs.py | fzf -1 -0 -e +s +m --height 10 -q "$inp")
	if [ "${#o}" -eq 0 ]
	then
		if [ ${#inp} -eq 0 ]
		then
			echo "no directories here"
			return 0
		else
			\cd "$inp"
		fi
	else
		\cd "$o"
	fi
}

newidea(){
	echo $1 >> ~/Documents/Programming/projects;
}

order66(){
	sudo sh -c 'pacman -Runs $(pacman -Qdtq)';
}

pfind(){
	paru -Sl | awk '{print $2($4=="" ? "" : " *")}' \
	| fzf --exact --multi --preview 'paru -Si {1}' --reverse \
	| xargs -ro paru -S
}

store(){
	mv $(pwd)/$1 /mnt/BigLinux;
	ln -s /mnt/BigLinux/$1 $1; 
}


plugins=(
  git
  dotenv
  rake
  rbenv
  zsh-autosuggestions
  zsh-z
)
source $ZSH/oh-my-zsh.sh

#aliases
alias nv="nvim"
alias fzf='fzf --bind "right:replace-query" --bind "left:clear-query"'
alias i3config="nvim ~/.config/i3/config"
alias ls="exa"
alias newalias="nvim ~/.zshrc;source ~/.zshrc"
alias feh="feh -d."
alias i3lock="~/shs/lock.sh"
alias screenoff="xset dpms force on && xset dpms force standby"
alias goodnight="~/shs/gn.sh"
alias kbdsetup="sudo python ~/.g213.py"
alias bc="bc -l"
alias nnn="n"
alias syu="sudo pacman -Syu --noconfirm"
alias gn="goodnight"
alias cd="fzcd"
alias ocd="\cd"
alias grep="grep --color"
alias dropcache="sync; sudo sh -c 'echo 1 > /proc/sys/vm/drop_caches'"
alias plan="rm /tmp/plan; nvim /tmp/plan"
alias tclock="tty-clock -s -c -D -C 6"
alias lock="i3lock"
alias st="speedtest"
alias vimcs="nvim -p *.cs"
alias selfcam="mpv /dev/video0 --profile=low-latency --untimed"
alias ani-cli="~/shs/ani-cli.sh"
alias nvc="nvim main.cpp"
alias gph='git push hub "$(git_current_branch)"'
alias gpuh='git pull hub "$(git_current_branch)" --force'
alias rf="rm -rf"
alias lt="exa -lrs time"
alias lat="exa -lars time"
alias ytdl="youtube-dl"
