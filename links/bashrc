#
# ~/.bashrc
#
#old ps1
#PS1='[\u@\h \W]\$ '
PS1='\[\033[01;31m\]\u@\h\[\033[00m\] \[\033[01;34m\]\W \$\[\033[00m\] '
HISTSIZE=10000
HISTFILESIZE=10000

# If not running interactively, don't do anything
[[ $- != *i* ]] && return
#powerline-daemon -q
#POWERLINE_BASH_CONTINUATION=1
#POWERLINE_BASH_SELECT=1
#. /usr/share/powerline/bindings/bash/powerline.sh
#functions
#bind '"\C-r": "\C-x1\e^\er"'
#bind -x '"\C-x1": __fzf_history';
__fzf_history ()
{
__ehc $(history | fzf -e --tac --tiebreak=index | perl -ne 'm/^\s*([0-9]+)/ and print "!$1"')
}

__ehc()
{
if
        [[ -n $1 ]]
then
        bind '"\er": redraw-current-line'
        bind '"\e^": magic-space'
        READLINE_LINE=${READLINE_LINE:+${READLINE_LINE:0:READLINE_POINT}}${1}${READLINE_LINE:+${READLINE_LINE:READLINE_POINT}}
        READLINE_POINT=$(( READLINE_POINT + ${#1} ))
else
        bind '"\er":'
        bind '"\e^":'
fi
}

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    \nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

#exports
export MANPAGER="nvim -c 'set ft=man' -"
export EDITOR=nvim


newbasicdiscord(){
	cp -r ~/Documents/Programming/python/basicdiscord ~/Documents/Programming/python/$1;
	mv ~/Documents/Programming/python/$1/main.py ~/Documents/Programming/python/$1/$1.py;
	echo "cd ~/Documents/Programming/python/$1" >> ~/shs/$1.sh;
	echo "python3 $1.py &>/dev/null &" >> ~/shs/$1.sh;
	chmod +x ~/shs/$1.sh;
	echo "new discord bot set up at ~/Documents/Programming/python/$1";
}

mkcdir(){
	mkdir $1;
	\cd $1;
}

runcmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, <>' ; }
writecmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, do{ chomp($_ = <>); $_ }' ; }

lwd(){
	sh -c "~/shs/lwd.sh"
}

histsearch(){
	case "$1" in
		-e)
			history | cut -c 8- | fzf +s -e --tac --height 10 -q "$1"|runcmd;
			return 0;;
		*)
			echo $(history | cut -c 8- | fzf -e +s --tac --height 10 -q "$1") | writecmd;
			return 0;;
	esac
}

bcd(){
	\cd $(python3 -c "print('$(lwd | fzf -e +s +m --tac -1 -0 --height 5 -q "$1")'.split(' -  ',1)[1])")
}

fzcd(){
	inp=$1
	o=$(python3 ~/Documents/Programming/python/scripts/dirs.py | fzf -1 -0 -e +s +m --height 10 -q "$inp")
	if [ "${#o}" -eq 0 ]
	then
		if [ ${#inp} -eq 0 ]
		then
			echo "no directories here"
			return 0
		else
			\cd "$inp"
		fi
	else
		\cd "$o"
	fi
}

newidea(){
	echo $1 >> ~/Documents/Programming/projects;
}

order66(){
	sudo sh -c 'pacman -Runs $(pacman -Qdtq)';
}

pfind(){
	paru -Sl | awk '{print $2($4=="" ? "" : " *")}' \
	| fzf --exact --multi --preview 'paru -Si {1}' --reverse \
	| xargs -ro paru -S
}


#aliases
alias nv="nvim"
alias fzf='fzf --bind "right:replace-query" --bind "left:clear-query"'
alias i3config="nvim ~/.config/i3/config"
alias ls="exa"
alias newalias="nvim ~/.bashrc;source ~/.bashrc"
alias feh="feh -d."
alias i3lock="~/shs/lock.sh"
alias screenoff="xset dpms force on && xset dpms force standby"
alias goodnight="~/shs/gn.sh"
alias kbdsetup="sudo python ~/.g213.py"
alias bc="bc -l"
alias nnn="n"
alias syu="sudo pacman -Syu --noconfirm"
alias gn="goodnight"
alias cd="fzcd"
alias ocd="\cd"
alias grep="grep --color"
alias dropcache="sync; sudo sh -c 'echo 1 > /proc/sys/vm/drop_caches'"
alias plan="rm /tmp/plan; nvim /tmp/plan"
alias tclock="tty-clock -s -c -D -C 6"
alias lock="i3lock"
alias st="speedtest"
alias vimcs="nvim -p *.cs"
alias selfcam="mpv av://v4l2:/dev/video0 --profile=low-latency --untimed"
alias ani-cli="~/shs/ani-cli.sh"
alias nvc="nvim main.cpp"
alias conf="~/shs/conf.sh"
